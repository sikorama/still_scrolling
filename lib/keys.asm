; Definition des touches 
; et macro pour executer des actions si les symboles existent


KEY_UP_L0BIT EQU 0
KEY_DOWN_L0BIT EQU 2
KEY_LEFT_L1BIT EQU 0
KEY_RIGHT_L0BIT EQU 1

KEY_KP0_L1BIT EQU 7
KEY_KP1_L1BIT EQU 5
KEY_KP2_L1BIT EQU 6
KEY_KP3_L0BIT EQU 5
KEY_KP4_L2BIT EQU 4
KEY_KP5_L1BIT EQU 4
KEY_KP6_L0BIT EQU 4
KEY_KP7_L1BIT EQU 2
KEY_KP8_L1BIT EQU 3
KEY_KP9_L0BIT EQU 3

KEY_KPRET_L0BIT EQU 6
KEY_RET_L2BIT EQU 2
KEY_SHIFT_L2BIT EQU 5
KEY_CTRL_L2BIT EQU 7

KEYCLR_L2BIT EQU 0

MACRO CHECK_ACTION action,actionkey
ifdef {action}
		bit {actionkey},a
		jp z,{action}
endif
MEND

MACRO CHECK_ACTION_KEYS kbstate
		ld HL,end_actions
		push hl

		; Ligne 0			
		LD 	a,({kbstate}+0)
		cp #ff
		jr z,@kbline1		
		CHECK_ACTION ACTION_KEYUP,KEY_UP_L0BIT
		CHECK_ACTION ACTION_KEYDOWN,KEY_DOWN_L0BIT
		CHECK_ACTION ACTION_KEYRIGHT,KEY_RIGHT_L0BIT
		CHECK_ACTION ACTION_KP3,KEY_KP3_L0BIT
		CHECK_ACTION ACTION_KP6,KEY_KP6_L0BIT
		CHECK_ACTION ACTION_KPRET,KEY_KPRET_L0BIT
		CHECK_ACTION ACTION_KP9,KEY_KP9_L0BIT

@kbline1:
		; Ligne 0			
		LD 	a,({kbstate}+1)
		cp #ff
		jr z,@nxtline2
		
		CHECK_ACTION ACTION_KEYLEFT,KEY_LEFT_L1BIT
		CHECK_ACTION ACTION_KP0,KEY_KP0_L1BIT
		CHECK_ACTION ACTION_KP1,KEY_KP1_L1BIT
		CHECK_ACTION ACTION_KP2,KEY_KP2_L1BIT
		CHECK_ACTION ACTION_KP5,KEY_KP5_L1BIT
		CHECK_ACTION ACTION_KP7,KEY_KP7_L1BIT
		CHECK_ACTION ACTION_KP8,KEY_KP8_L1BIT
		

@nxtline2:
		LD 	a,({kbstate}+2)
		cp #ff
		jr z,@nxtline3
		CHECK_ACTION ACTION_KP4, KEY_KP4_L2BIT
		CHECK_ACTION ACTION_RET, KEY_RET_L2BIT
		CHECK_ACTION ACTION_SHIFT, KEY_SHIFT_L2BIT
		CHECK_ACTION ACTION_CTRL, KEY_CTRL_L2BIT	

@nxtline3:

@lastline:

	pop hl
	xor a
	jr @nokey

end_actions:
	ld a,1
@nokey:

MEND

; On pourrait aussi avoir un ret si l'action a ete appelee par un call
MACRO ACTION_END
	ret ; jp end_actions	
MEND